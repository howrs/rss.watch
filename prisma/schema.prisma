generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Guild {
  id String @id

  discordId String @unique

  icon String?
  name String

  version Int @default(0)

  ClientGroup ClientGroup[]
  Channel     Channel[]
  Feed        Feed[]
  GuildToUser GuildToUser[]
  Webhook     Webhook[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model User {
  id String @id

  name   String
  avatar String?

  version Int     @default(0)
  deleted Boolean @default(false)

  GuildToUser GuildToUser[]

  ClientGroup ClientGroup[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([id, version])
}

model GuildToUser {
  guildId String
  guild   Guild  @relation(fields: [guildId], references: [id])

  userId String
  user   User   @relation(fields: [userId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@id([guildId, userId])
}

model ClientGroup {
  id String @id

  guildId String
  guild   Guild  @relation(fields: [guildId], references: [id])

  userId String
  user   User   @relation(fields: [userId], references: [id])

  Client Client[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([id, guildId])
}

model Client {
  id String @id

  lastMutationID Int @default(0)
  version        Int @default(0)

  clientGroupId String
  clientGroup   ClientGroup @relation(fields: [clientGroupId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([version, clientGroupId])
}

model Channel {
  id String @id

  discordId String @unique

  type     Int
  name     String
  position Int
  parentId String?

  version Int     @default(0)
  deleted Boolean @default(false)

  Feed Feed[]

  webhookId String?
  Webhook   Webhook?

  guildId String
  guild   Guild  @relation(fields: [guildId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([version, guildId])
  @@index([updatedAt])
}

model Feed {
  id String @id

  value   String
  order   Float
  enabled Boolean @default(true)

  type       String?
  faviconUrl String?
  xmlUrl     String?

  version Int     @default(0)
  deleted Boolean @default(false)

  channelId String
  channel   Channel @relation(fields: [channelId], references: [id])

  guildId String
  guild   Guild  @relation(fields: [guildId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([version, guildId])
  @@index([updatedAt])
}

model Webhook {
  id String @id

  url String

  version Int     @default(0)
  deleted Boolean @default(false)

  channelId String  @unique
  channel   Channel @relation(fields: [channelId], references: [id])

  guildId String
  guild   Guild  @relation(fields: [guildId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([version, guildId])
  @@index([updatedAt])
}

model Sent {
  hash Bytes @id
}
